   1              	# 1 "swi_handler.S"
   1              	@/*****************************************************************************
   0              	
   0              	
   2              	@*   swi_handler.s: SWI handler file for NXP LPC230x Family Microprocessors
   3              	@*
   4              	@*   Copyright(C) 2006, NXP Semiconductor
   5              	@*   All rights reserved.
   6              	@*
   7              	@*   History
   8              	@*   2006.09.01  ver 1.00    Prelimnary version, first Release
   9              	@*
  10              	@*****************************************************************************/
  11              	
  12              	@ modified by Martin Thomas to extrace SWI-number from
  13              	@ SWI instruction parameter
  14              	
  15              	// PRESERVE8
  16              	
  17              	.equ SWI_IRQ_DIS,  0
  18              	.equ SWI_IRQ_EN,   1
  19              	.equ SWI_FIQ_DIS,  2
  20              	.equ SWI_FIQ_EN,   3
  21              	
  22              	.equ I_Bit,        0x80
  23              	.equ F_Bit,        0x40
  24              	
  25              	@The exported labels and functions
  26              		.global SoftwareInterrupt    
  27              		.global IntEnable
  28              		.global IntDisable
  29              	
  30              	.arm
  31              	.section .SWI_HANDLER, "ax"
  32              	
  33              	@********************************************************************
  34              	@*  SWI interrupt handler											*
  35              	@*  Function : SoftwareInterrupt(SWI_Number)						*
  36              	@*  The SWI_Number is 0 through 3									*
  37              	@*  See below "SwiFunction" table below								*
  38              	@*  Parameters:    None												*
  39              	@*  input  :       SWI_Number										* 
  40              	@*  output :       None												*
  41              	@*  mthomas: Expects that SWI instruction is called from ARM-mode   *
  42              	@*           (not thumb). This is the case if the functions below  *
  43              	@*           (IntEnable/IntDisable) get used.
  44              	@********************************************************************
  45              	SoftwareInterrupt:
  46 0000 04001EE5 		LDR		R0, [LR, #-4]          /* get swi instruction code (ARM-mode) */
  47 0004 FF04C0E3 		BIC		R0, R0, #0xff000000    /* clear top 8 bits leaving swi "comment field"=number */
  48 0008 040050E3 		CMP		R0, #4                 /* range check */
  49 000c 00F19F37 		LDRLO	PC, [PC, R0, LSL #2]   /* get jump-address from table */
  50 0010 0EF0B0E1 		MOVS	PC, LR                 /* if out of range: do nothing and return */
  51              	
  52              	SwiFunction:
  53 0014 24000000 	.word IRQDisable
  54 0018 34000000 	.word IRQEnable
  55 001c 44000000 	.word FIQDisable
  56 0020 54000000 	.word FIQEnable
  57              	
  58              	IRQDisable:
  59 0024 00004FE1 		MRS		R0, SPSR
  60 0028 800080E3 		ORR		R0, R0, #I_Bit
  61 002c 00F061E1 		MSR		SPSR_c, R0
  62 0030 0EF0B0E1 		MOVS	PC, LR
  63              	
  64              	IRQEnable:
  65 0034 00004FE1 		MRS		R0, SPSR
  66 0038 8000C0E3 		BIC		R0, R0, #I_Bit
  67 003c 00F061E1 		MSR		SPSR_c, R0
  68 0040 0EF0B0E1 		MOVS	PC, LR
  69              	
  70              	FIQDisable:
  71 0044 00004FE1 		MRS		R0, SPSR
  72 0048 400080E3 		ORR		R0, R0, #F_Bit
  73 004c 00F061E1 		MSR		SPSR_c, R0
  74 0050 0EF0B0E1 		MOVS	PC, LR
  75              	
  76              	FIQEnable:
  77 0054 00004FE1 		MRS		R0, SPSR
  78 0058 4000C0E3 		BIC		R0, R0, #F_Bit
  79 005c 00F061E1 		MSR		SPSR_c, R0
  80 0060 0EF0B0E1 		MOVS	PC, LR
  81              	
  82              	@**********************************************************************
  83              	@*  Call SWI to enable IRQ                                            *
  84              	@*  Function : void IntEnable(void)                                   *
  85              	@*  Parameters:      None                                             *
  86              	@*  input  :         None                                             * 
  87              	@*  output :         None                                             *
  88              	@**********************************************************************
  89              	IntEnable:
  90 0064 010000EF 		SWI     SWI_IRQ_EN
  91 0068 1EFF2FE1 		BX      lr
  92              	@ end of IntEnable
  93              	
  94              	@**********************************************************************
  95              	@*  Call SWI to disable IRQ                                           *
  96              	@*  Function : void IntDisable(void)                                  *
  97              	@*  Parameters     : None                                             *
  98              	@*  input          : None                                             * 
  99              	@*  output         : None                                             *
 100              	@**********************************************************************
 101              	IntDisable:
 102 006c 000000EF 		SWI     SWI_IRQ_DIS
 103 0070 1EFF2FE1 		BX      lr
 104              	@ end of IntDisable
 105              	
 106              	.end
DEFINED SYMBOLS
       swi_handler.S:17     *ABS*:0000000000000000 SWI_IRQ_DIS
       swi_handler.S:18     *ABS*:0000000000000001 SWI_IRQ_EN
       swi_handler.S:19     *ABS*:0000000000000002 SWI_FIQ_DIS
       swi_handler.S:20     *ABS*:0000000000000003 SWI_FIQ_EN
       swi_handler.S:22     *ABS*:0000000000000080 I_Bit
       swi_handler.S:23     *ABS*:0000000000000040 F_Bit
       swi_handler.S:45     .SWI_HANDLER:0000000000000000 SoftwareInterrupt
       swi_handler.S:89     .SWI_HANDLER:0000000000000064 IntEnable
       swi_handler.S:101    .SWI_HANDLER:000000000000006c IntDisable
       swi_handler.S:46     .SWI_HANDLER:0000000000000000 $a
       swi_handler.S:52     .SWI_HANDLER:0000000000000014 SwiFunction
       swi_handler.S:53     .SWI_HANDLER:0000000000000014 $d
       swi_handler.S:58     .SWI_HANDLER:0000000000000024 IRQDisable
       swi_handler.S:64     .SWI_HANDLER:0000000000000034 IRQEnable
       swi_handler.S:70     .SWI_HANDLER:0000000000000044 FIQDisable
       swi_handler.S:76     .SWI_HANDLER:0000000000000054 FIQEnable
       swi_handler.S:59     .SWI_HANDLER:0000000000000024 $a
                   .debug_aranges:000000000000000c $d

NO UNDEFINED SYMBOLS
